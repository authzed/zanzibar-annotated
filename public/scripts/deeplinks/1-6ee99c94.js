import{f as e,c as t}from"./deeplinks.js";function n(n){return e(t(n.wholeText))}function o(e){const t=(e,t)=>{let n,o;return 3==e.nodeType||0==e.childNodes.length?(n=e,o=t):(n=e.childNodes[Math.min(t,e.childNodes.length-1)],o=3==n.nodeType?t==e.childNodes.length?n.wholeText.length:0:t==e.childNodes.length?1:0),[n,o]},[n,o]=t(e.startContainer,e.startOffset),[r,s]=t(e.endContainer,e.endOffset),l=new Range,d=document.createTreeWalker(e.commonAncestorContainer);let i=0,a=d.currentNode,c=r;for(;a;){if(0==i&&a==n){if(3!=a.nodeType&&0!=o&&(a=d.nextNode(),!a))return null;i=1}if(3==a.nodeType&&""!=a.wholeText.trim()&&(1==i&&(l.setStart(a,a==n?o:0),i=2),2==i&&(c=l.endContainer,l.setEnd(a,a.wholeText.length))),2==i&&a==r)return 3==a.nodeType&&""!=a.wholeText.trim()?(l.setEnd(a,s),l):(a==l.endContainer&&0==s&&l.setEnd(c,c.wholeText.length),l);a=d.nextNode()}return null}function r(e){const t=[];for(let r=0;r<e.rangeCount;r++){const s=o(e.getRangeAt(r));if(s&&!s.collapsed){const[e,o]=[s.startContainer,s.endContainer];3==e.nodeType&&3==o.nodeType&&t.push([[n(e),e,s.startOffset],[n(o),o,s.endOffset],[[],0,0]])}}if(0==t.length)return"";const r=document.createTreeWalker(document.body,4);let s;for(;s=r.nextNode();){const e=n(s);for(const[[n,o],[r,l],d]of t)o==s&&(d[1]=d[0].length),l==s&&(d[2]=d[0].length),n==e?d[0].push(!0):r==e&&d[0].push(!1)}return`#1${t.map((([[e,,t],[n,,o],[r,s,l]])=>{let d;if(d=e==n?`${e}:${t}:${o}`:`${e}:${t}.${n}:${o}`,new Set(r).size!=r.length){d+=`~${r.map((e=>e?"s":"e")).join("")}~${s}~${l}`}return d})).join()}`}function s(e){const[t,o,r,s]=e.split("~"),l=t.split(".").map((e=>e.split(":")));let d,i,a,c;1==l.length?([[d,i,c]]=l,a=d):[[d,i],[a,c]]=l,[i,c]=[i,c].map(parseFloat);const f=[],p=document.createTreeWalker(document.body,4,null);let u,h,m,g=0;for(;u=p.nextNode();){const e=n(u);e==d?f.push([u,!0]):e==a&&(f.push([u,!1]),g++)}if(o&&f.map((e=>e[1]?"s":"e")).join("")==o&&(h=f[parseInt(r)],m=f[parseInt(s)]),!h||!m)if(d==a)h=f[0],m=h;else{const e=g>1,t=f.findIndex((t=>t[1]==e));h=f[e?t:t-1],m=f[e?t+1:t]}const T=new Range;return h&&m&&(T.setStart(h[0],i),T.setEnd(m[0],c)),T}function l(e){return e.replace(/^1\.?/gm,"").split(",").map(s)}export{l as fragmentToRangeList,r as selectionToFragment};//# sourceMappingURL=1-6ee99c94.js.map
